<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.cjs2108_ksh.dao.BoardDAO">
	<!-- 게시글 DB입력 -->
	<insert id="setBoardWrite">
		<if test="vo.category == 0">
			insert into board values(default, #{vo.category}, #{vo.nickName}, #{vo.title}, #{vo.content}, default, default, #{vo.hostIp}, default, #{vo.email}, '1');
		</if>
		<if test="vo.category != 0">
			insert into board values(default, #{vo.category}, #{vo.nickName}, #{vo.title}, #{vo.content}, default, default, #{vo.hostIp}, default, #{vo.email}, default);
		</if>
	</insert>
	
	<!-- 게시글 총 건수 -->
	<select id="totRecCnt" resultType="int">
		select count(*) from board;
	</select>
	
	<!-- 검색했을 때 건수 -->
	<!-- 
	<select id="totRecCntSearch" resultType="int">
		<if test='search_target eq "title"'>
			select count(*) from board WHERE title LIKE CONCAT('%',#{searchString},'%') order by idx;
		</if>
		<if test='search_target eq "nickName"'>
			select count(*) from board WHERE nickName LIKE CONCAT('%',#{searchString},'%') order by idx;
		</if>
		<if test='search_target eq "content"'>
			select count(*) from board WHERE content LIKE CONCAT('%',#{searchString},'%') order by idx;
		</if>
	</select>
	 -->
	 <select id="totRecCntSearch" resultType="int">
	 	select count(*) from board where ${search_target} like concat('%',#{searchString},'%');
	 </select>
	 
	 <select id="getBoardListSearch" resultType="com.spring.cjs2108_ksh.vo.BoardVO">
	 	select *,cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board 
			where ${search_target} like concat('%',#{searchString},'%') order by idx desc limit #{startIndexNo},#{pageSize};
	 </select>
	 
	<!-- 검색했을 때 게시글 목록 호출 -->
	<!-- <select id="getBoardListSearch" resultType="com.spring.cjs2108_ksh.vo.BoardVO">
		<if test='search_target eq "title"'>
			select *,cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board 
			WHERE title LIKE CONCAT('%',#{searchString},'%') and category = #{category} order by notice desc, idx desc;
		</if>
		<if test='search_target eq "nickName"'>
			select *,cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board 
			WHERE nickName LIKE CONCAT('%',#{searchString},'%') and category = #{category} order by notice desc, idx desc;
		</if>
		<if test='search_target eq "content"'>
			select *,cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board 
			WHERE content LIKE CONCAT('%',#{searchString},'%') and category = #{category} order by notice desc, idx desc;
		</if>
	</select> -->
	
	<!-- 게시글 목록 호출 -->
	<select id="getBoardList" resultType="com.spring.cjs2108_ksh.vo.BoardVO">
		<if test="category == 99">
			select *,
			(select count(*) from boardReply where boardIdx = board.idx) as replyCount,
			cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board 
			order by notice desc, idx desc limit #{startIndexNo},#{pageSize};
		</if>
		<if test="category != 99">
			select *,
			(select count(*) from boardReply where boardIdx = board.idx) as replyCount,
			cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board 
			where category = #{category} order by notice desc, idx desc limit #{startIndexNo},#{pageSize};
		</if>
	</select>
	
	<!-- 글 읽었을 때 조회수 증가 -->
	<update id="addReadNum">
		update board set readNum = readNum + 1 where idx = #{idx};
	</update>
	
	<!-- 글 가져오기 -->
	<select id="getBoardContent" resultType="com.spring.cjs2108_ksh.vo.BoardVO">
		select * from board where idx = #{idx};
	</select>
	
	<!-- 이전글&다음글 -->
	<select id="getPreNext" resultType="com.spring.cjs2108_ksh.vo.BoardVO"><!-- sql 안에 비교연산자나 부등호 쓸 때는 기호를 비교연산자인지 구분할 수 없기 때문에 이럴 때 cdata를 사용 -->
		select idx, title from board where idx in (
		(select idx from board where <![CDATA[idx < #{idx}]]> order by idx desc limit 1),
		(select idx from board where <![CDATA[idx > #{idx}]]> limit 1));
	</select>
	
	<!-- 좋아요 처리 -->
	<update id="setGoodUpdate">
		update board set good = good + 1 where idx = #{idx};
	</update>
	
	<!-- 글 수정 -->
	<update id="setBoardEdit">
		update board set title=#{vo.title}, category=#{vo.category}, content=#{vo.content} where idx=#{vo.idx};
	</update>
	
	<!-- 글 삭제 -->
	<delete id="setBoardDelete">
		delete from board where idx = #{idx};
	</delete>
	
	<!-- 글 삭제시 딸린 댓글 전체 삭제 -->
	<delete id="replyAllDel">
		delete from boardReply where boardIdx = #{idx};
	</delete>
	
	<!-- 댓글 처리 -->
	<select id="maxLevelOrder" resultType="String"><!-- null비교하기위해 String으로 함 -->
		select max(levelOrder) from boardReply where boardIdx = #{boardIdx};
	</select>
	
	<insert id="setReplyWrite">
		insert into boardReply values (default,#{rVo.boardIdx},#{rVo.email},#{rVo.nickName},default,#{rVo.hostIp},#{rVo.content},default,#{rVo.levelOrder});
	</insert>
	
	<insert id="setReplyWrite2">
		insert into boardReply values (default,#{rVo.boardIdx},#{rVo.email},#{rVo.nickName},default,#{rVo.hostIp},#{rVo.content},#{rVo.level},#{rVo.levelOrder});
	</insert>
	
	<select id="getBoardReply" resultType="com.spring.cjs2108_ksh.vo.BoardReplyVO">
		select *, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from boardReply where boardIdx = #{idx} order by levelOrder;
	</select>
	
	<update id="levelOrderPlusUpdate">
		update boardReply set levelOrder = levelOrder + 1 where boardIdx=#{rVo.boardIdx} and levelOrder > #{rVo.levelOrder};
	</update>
	
	<delete id="setReplyDelete">
		delete from boardReply where idx = #{replyIdx};
	</delete>
	
	<select id="getReply" resultType="String">
		select content from boardReply where idx = #{replyIdx};
	</select>
	
	<update id="boardReplyEdit">
		update boardReply set content = #{content}, wDate = now() where idx = #{replyIdx};
	</update>
	
</mapper>